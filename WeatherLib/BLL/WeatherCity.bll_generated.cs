//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Linq.Expressions;
using WeatherLib.Model;
using WeatherLib.DAL;
using WeatherLib.Utility;

namespace WeatherLib.BLL
{
    
    public partial interface IWeatherCityBL: WeatherLib.Infrastructure.BLL.IGenericBL<WeatherCity>
    {
      }
    
    public partial class WeatherCityBL:
       WeatherLib.Infrastructure.BLL.GenericBL<WeatherCity>,
       IWeatherCityBL
    {
      public WeatherCityBL() : base() {
        unitOfWork = new WeatherLib.DAL.UnitOfWork();
    	OnCreate();
      }
      public WeatherCityBL(WeatherLib.DAL.UnitOfWork unitOfWork) : base() {
        this.unitOfWork = unitOfWork;
    	OnCreate();
      }
      partial void OnCreate();
      private WeatherLib.DAL.UnitOfWork UnitOfWork {
        get { return unitOfWork as WeatherLib.DAL.UnitOfWork;}
    	set { unitOfWork = value;}
      }
      private IWeatherCityRepository _repository;
      private IWeatherCityRepository Repository
      {
      	get
    	{
    	  if (_repository == null)
    	  {
    	    _repository = unitOfWork.Repository<WeatherCity>() as IWeatherCityRepository;
    	  }
    	  return _repository;
    	}
    	set
    	{
    	  _repository = value;
    	  }
      }
        
        public override WeatherCity InsertOrUpdate(WeatherCity entity) {
            if (entity.ID == 0) {
    	    return Insert(entity);
    	  }
    	  Update(entity);
    	  return entity;
          }
    
    }
}
